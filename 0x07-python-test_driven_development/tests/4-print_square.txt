==============================
 How to Use 2-print_square.py
===============================

Module containing just on function that prints a square with the character #.

Prototype: def print_square(size):
size is the size length of the square
size must be an integer,
otherwise raise a TypeError exception with the message size must be an integer
if size is less than 0,
raise a ValueError exception with the message size must be >= 0


Import function from module:
==================================

    >>> print_square = __import__('4-print_square').print_square

Normal mode (correct input and output):
=======================================

    >>> print_square(4)
    ####
    ####
    ####
    ####

    >>> print_square(7)
    #######
    #######
    #######
    #######
    #######
    #######

    >>> print_square(0)

Bad args:
=========

    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'

    >>> print_square("Arg1", "Arg2", "Arg3")
    Traceback (most recent call last):
    TypeError: print_square() takes 1 positional argument but 3 were given

Wrong data types (Not Strings):
===============================

Tuple

    >>> x = tuple(("apple", "lemon", "cherry"))
    >>> print_square(x)
    Traceback (most recent call last):
    TypeError: size must be an integer

list

    >>> x = list(("element1", "element2", "element3"))
    >>> print_square(x)
	    Traceback (most recent call last):
    TypeError: size must be an integer

Bool

    >>> x = bool(5)
    >>> print_square(x)
    Traceback (most recent call last):
    TypeError: size must be an integer

Dict

    >>> x = dict(name="Sebastian", age=33)
    >>> print_square(x)
    Traceback (most recent call last):
    TypeError: size must be an integer

Overflow

    >>> x = float('inf')
    >>> print_square(x)
    Traceback (most recent call last):
    TypeError: size must be an integer

NegativeInt

    >>> x = int(-20)
    >>> print_square(x)
    Traceback (most recent call last):
    TypeError: size must be >= 0

float

    >>> x = float(20.50)
    >>> print_square(x)
    Traceback (most recent call last):
    TypeError: size must be an integer

Type None

    >>> x = None
    >>> print_square(x)
    Traceback (most recent call last):
    TypeError: size must be an integer
